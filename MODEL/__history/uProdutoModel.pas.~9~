unit uProdutoModel;

interface
     uses System.SysUtils;
type
    TProduto = class
               private
    getDescricao: String;
    function getCelular: String;
    function getCodigo: Integer;
    function getEndereco: String;
    function getPreco: String;
    procedure setCelular(const Value: String);
    procedure setCodigo(const Value: Integer);
    procedure setEndereco(const Value: String);
    procedure SetDescricao(const Value: String);
    procedure setSituacao(const Value: String);

               protected
                 { protected declarations }
               public
                  property Codigo: Integer read getCodigo write setCodigo;
                  property Descricao: String read getDescricao write SetDescricao;
                  property Preco: String read getPreco write setSituacao;
                  property Endereco: String read getEndereco write setEndereco;
                  property Celular: String read getCelular write setCelular;

               published
                 { published declarations }
               end;

implementation

{ TCliente }

function TProduto.getCelular: String;
begin

end;

function TProduto.getCodigo: Integer;
begin

end;

function TProduto.getEndereco: String;
begin

end;

function TProduto.getPreco: String;
begin

end;

procedure TProduto.setCelular(const Value: String);
begin

end;

procedure TProduto.setCodigo(const Value: Integer);
begin

end;

procedure TProduto.setEndereco(const Value: String);
begin

end;

procedure TProduto.SetDescricao(const Value: String);
begin
  if Value = EmptyStr then
    raise EArgumentException.Create('''Nome''precisa ser preenchido!');
  getDescricao := Value;
end;

procedure TProduto.setSituacao(const Value: String);
begin

end;

end.

